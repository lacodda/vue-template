@mixin button-variant(
  $background,
  $border,
  $hover-background: darken($background, 7.5%),
  $hover-border: darken($border, 10%),
  $active-background: darken($background, 10%),
  $active-border: darken($border, 12.5%)
) {
  color: color-yiq($background);
  background: $background;
  border-color: $border;
  @include box-shadow($btn-box-shadow);

  @include hover {
    color: color-yiq($hover-background);
    border-color: $hover-border;
  }

  &:not(:disabled):not(.btn--disabled):not(.btn--flat) {
    @include hover {
      background: $hover-background;
    }
    &:focus,
    &.btn--focus {
      // Avoid using mixin so we can pass custom focus shadow properly
      @if $enable-shadows {
        box-shadow: $btn-box-shadow, 0 0 0 $btn-focus-width rgba($border, 0.5);
      } @else {
        box-shadow: 0 0 0 $btn-focus-width rgba($border, 0.5);
      }
    }
  }

  // Disabled comes first so active can properly restyle
  &.btn--disabled,
  &:disabled {
    color: color-yiq($background);
    background-color: $background;
    border-color: $border;
  }

  &:not(:disabled):not(.btn--disabled):active,
  &:not(:disabled):not(.btn--disabled).btn--active,
  .dropdown--show > &.dropdown__toggle {
    color: color-yiq($active-background);
    border-color: $active-border;

    &:not(.btn--flat) {
      background-color: $active-background;
      &:focus {
        // Avoid using mixin so we can pass custom focus shadow properly
        @if $enable-shadows {
          box-shadow: $btn-active-box-shadow,
            0 0 0 $btn-focus-width rgba($border, 0.5);
        } @else {
          box-shadow: 0 0 0 $btn-focus-width rgba($border, 0.5);
        }
      }
    }
  }
}
